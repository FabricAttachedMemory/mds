/*
 *
 *  Managed Data Structures
 *  Copyright Â© 2016 Hewlett Packard Enterprise Development Company LP.
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU Lesser General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 *  As an exception, the copyright holders of this Library grant you permission
 *  to (i) compile an Application with the Library, and (ii) distribute the 
 *  Application containing code generated by the Library and added to the 
 *  Application during this compilation process under terms of your choice, 
 *  provided you also meet the terms and conditions of the Application license.
 *
 */

package com.hpl.inventory;

import com.hpl.inventory.TextStyle.Color;
import com.hpl.mds.PubResult;

import org.apache.log4j.Logger;


public class Result {
	
	private static final Logger log = Logger.getLogger(Result.class);
		
    private static final String failed = Color.Red.bg.format("failed");
    private static final String succeededFirstTry =	Color.Green.bg(Color.Black).format("succeeded");
    private static final String succeededRetry = Color.Cyan.bg.format("succeeded");
        
    private static int failScore = 0;
    private static int retryScore = 0;
    private static int successScore = 0;

	
    public static void reportResult(Runnable task, int tries, PubResult result) 
    { 
        if (result.succeeded()) { 
            if (tries == 1) {
            	successScore++;
                //System.out.println( 
            	log.fatal(
                    "Running " + task.getClass().getName() + 
                    ": after " + tries + " tries: " + succeededFirstTry);
            }
            else {
            	retryScore++;
                //System.out.println( 
                log.fatal( 
                    "Running " + task.getClass().getName() + 
                    ": after " + tries + " tries: " + succeededRetry + "\n"); 
            }
        } 
        else { 
        	failScore++;
            //System.out.println(
            log.fatal(
                "Running " + task.getClass().getName() + 
                ": after " + tries + " tries: " + failed); 
        } 
    }
    
    public static void reportFinalResult() {
        System.out.println("FinalResult: \n  succeeded: " + successScore + 
        	"\n  failed: " + failScore + "\n  retried: " + retryScore);
    }
    
}
