/*
 *
 *  Managed Data Structures
 *  Copyright Â© 2016 Hewlett Packard Enterprise Development Company LP.
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU Lesser General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 *  As an exception, the copyright holders of this Library grant you permission
 *  to (i) compile an Application with the Library, and (ii) distribute the 
 *  Application containing code generated by the Library and added to the 
 *  Application during this compilation process under terms of your choice, 
 *  provided you also meet the terms and conditions of the Application license.
 *
 */


package com.hpl.inventory;

import java.util.List;
import java.util.ArrayList;


public class Demo1_OrderOut {

    public static void main(String[] args) {
        String inventoryName = "Inventory1";
        int nbrTasks = 20;
//        int nbrTasks = 2;
        int poolSize = 10;

        // testing only: create inventory
        // Demo1_Init.createAndPopulateInventory();

        // create taskList of OrderOut tasks
        Runnable task = null;
        List<Runnable> orderList = new ArrayList<>();
        for (int i = 0; i < nbrTasks; i++) {
            task = new AtomicTransaction( new OrderOut(inventoryName) );
            orderList.add(task);
        } 

        // pass taskList to taskExecutor 
        // to execute using threadpool of specified size 
        new TaskListExecutor(poolSize, orderList).run();
    }
 
} // end class Demo1_OrderOut

