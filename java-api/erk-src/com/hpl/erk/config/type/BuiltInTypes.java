/*
 *
 *  Managed Data Structures
 *  Copyright Â© 2016 Hewlett Packard Enterprise Development Company LP.
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU Lesser General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 *  As an exception, the copyright holders of this Library grant you permission
 *  to (i) compile an Application with the Library, and (ii) distribute the 
 *  Application containing code generated by the Library and added to the 
 *  Application during this compilation process under terms of your choice, 
 *  provided you also meet the terms and conditions of the Application license.
 *
 */

package com.hpl.erk.config.type;

import com.hpl.erk.TrueOnce;


public class BuiltInTypes {
  
  private static Object typesRegisterd = null;
  public static void registerTypes() {
    if (typesRegisterd != null) {
      return;
    }
    typesRegisterd = new Object();
    new IntType().register().alias(int.class);
    new LongType().register().alias(long.class);
    new DoubleType().register().alias(double.class);
    new NumType().register();
    new BooleanType().register().alias(boolean.class);
    new StringType().register();
    new FileType().register();
    new PathType().register();
    new IntArrayType().register();
    new BooleanArrayType().register();
    new DoubleArrayType().register();
    new LongArrayType().register();
    new ClassType().register();
    new DurationType().register();
    new PatternType().register();
    new PortionType().register();
  }
  
  
  private static final TrueOnce needInit = new TrueOnce();
  static void ensureConfigParams() {
    if (!needInit.check()) {
      return;
    }
    IntType.ensureConfigParams();
    DoubleType.ensureConfigParams();
    BooleanType.ensureConfigParams();
    PatternType.ensureConfigParams();
    StringType.ensureConfigParams();
    FileType.ensureConfigParams();
    PortionType.ensureConfigParams();

  }
  

}
