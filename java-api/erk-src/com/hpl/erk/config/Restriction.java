/*
 *
 *  Managed Data Structures
 *  Copyright Â© 2016 Hewlett Packard Enterprise Development Company LP.
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU Lesser General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 *  As an exception, the copyright holders of this Library grant you permission
 *  to (i) compile an Application with the Library, and (ii) distribute the 
 *  Application containing code generated by the Library and added to the 
 *  Application during this compilation process under terms of your choice, 
 *  provided you also meet the terms and conditions of the Application license.
 *
 */

package com.hpl.erk.config;

import com.hpl.erk.config.ex.RestrictionFailed;



public abstract class Restriction<T> {
  public abstract boolean checkVal(T val) throws RestrictionFailed;
  public abstract String describe();
  
  public boolean alwaysAllowsNull() {
    return true;
  }
  
  public <X extends T> void check(X val, ConfigParam<X> cp) throws RestrictionFailed {
    if (!checkVal(val)) {
      throw new RestrictionFailed(this, val, cp);
    }
  }

  @Override
  public String toString() {
    return describe();
  }
  
  public static Restriction<Object> non_null() {
    return new Restriction<Object>() {
      @Override
      public boolean checkVal(Object val) {
        return val != null;
      }
      
      @Override
      public String describe() {
        return "Must be non-null";
      }
      
      public boolean alwaysAllowsNull() {
        return false;
      };
    };
  };
  
  
  
}
