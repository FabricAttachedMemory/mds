/*
 *
 *  Managed Data Structures
 *  Copyright Â© 2016 Hewlett Packard Enterprise Development Company LP.
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU Lesser General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 *  As an exception, the copyright holders of this Library grant you permission
 *  to (i) compile an Application with the Library, and (ii) distribute the 
 *  Application containing code generated by the Library and added to the 
 *  Application during this compilation process under terms of your choice, 
 *  provided you also meet the terms and conditions of the Application license.
 *
 */

package com.hpl.erk.config;

import java.util.HashMap;
import java.util.Map;
import java.util.Set;

import com.hpl.erk.adt.IdentityHashSet;
import com.hpl.erk.config.func.ConfigFunc;
import com.hpl.erk.config.func.Param;
import com.hpl.erk.util.CollUtils;

public class GenericFunc<GT> extends ConfigFunc {
  private static final Map<String, Set<GenericFunc<?>>> cfuncs = new HashMap<>();
  
  public final GenericType<GT> generic;

  public GenericFunc(String name, GenericType<GT> generic, Param... params) {
    this(name, generic, Registration.REGISTERED, params);
  }

  public GenericFunc(String name, GenericType<GT> generic, Registration reg, Param...params) {
    super(name, params);
    this.generic = generic;
    if (reg == Registration.REGISTERED) {
      Set<GenericFunc<?>> known = cfuncs.get(name);
      if (known == null) {
        known = new IdentityHashSet<>();
        cfuncs.put(name, known);
      }
      known.add(this);
    }
  }

  public static Set<GenericFunc<?>> lookupCFuncs(String name) {
    Set<GenericFunc<?>> set = cfuncs.get(name);
    return CollUtils.maybeNullSet(set);
  }

}
