/*
 *
 *  Managed Data Structures
 *  Copyright Â© 2016 Hewlett Packard Enterprise Development Company LP.
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU Lesser General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 *  As an exception, the copyright holders of this Library grant you permission
 *  to (i) compile an Application with the Library, and (ii) distribute the 
 *  Application containing code generated by the Library and added to the 
 *  Application during this compilation process under terms of your choice, 
 *  provided you also meet the terms and conditions of the Application license.
 *
 */

package com.hpl.erk.adt;

import cern.colt.map.OpenIntDoubleHashMap;

/** An OpenIntDoubleHashMap that lets you set the default value when get() finds no value present.
 */
public class OpenIntDoubleHashMapDefault extends OpenIntDoubleHashMap {
	
	private static final long	serialVersionUID	= 171952220537560461L;
	
	private double defaultValue = 0;
	
	
	
	public OpenIntDoubleHashMapDefault() {
		super();
	}

	public OpenIntDoubleHashMapDefault(int initialCapacity, double minLoadFactor, double maxLoadFactor) {
		super(initialCapacity, minLoadFactor, maxLoadFactor);
		// TODO Auto-generated constructor stub
	}


	public OpenIntDoubleHashMapDefault(int initialCapacity) {
		super(initialCapacity);
	}

	public OpenIntDoubleHashMapDefault(double defaultValue) {
		super();
		this.defaultValue = defaultValue;
	}

	public OpenIntDoubleHashMapDefault(int initialCapacity, double defaultValue) {
		this(initialCapacity);
		this.defaultValue = defaultValue;
	}
	

	@Override
	public double get(int key) {
		int i = indexOfKey(key);
		if (i<0) return defaultValue; //not contained
		return values[i];
	}

	
	public double getDefaultValue() {
		return defaultValue;
	}

	
	public void setDefaultValue(double defaultValue) {
		this.defaultValue = defaultValue;
	}

}
