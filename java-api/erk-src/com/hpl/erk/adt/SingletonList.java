/*
 *
 *  Managed Data Structures
 *  Copyright Â© 2016 Hewlett Packard Enterprise Development Company LP.
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU Lesser General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 *  As an exception, the copyright holders of this Library grant you permission
 *  to (i) compile an Application with the Library, and (ii) distribute the 
 *  Application containing code generated by the Library and added to the 
 *  Application during this compilation process under terms of your choice, 
 *  provided you also meet the terms and conditions of the Application license.
 *
 */

package com.hpl.erk.adt;

import java.util.AbstractList;
import java.util.RandomAccess;

public class SingletonList<E> extends AbstractList<E> implements RandomAccess {
  public E elt;
  public boolean full = false;

  @Override
  public E get(int index) {
    if (index > 0 || index < 0 || !full) {
      throw new ArrayIndexOutOfBoundsException();
    }
    return elt;
  }

  @Override
  public int size() {
    return full ? 1 : 0;
  }

  @Override
  public boolean add(E e) {
    if (full) {
      throw new ArrayStoreException();
    }
    full = true;
    elt = e;
    return true;
  }

  @Override
  public E set(int index, E element) {
    if (index > 0 || index < 0) {
      throw new ArrayIndexOutOfBoundsException();
    }
    E old = elt;
    elt = element;
    return old;
  }

  @Override
  public void clear() {
    full = false;
    elt = null;
  }
  

}
