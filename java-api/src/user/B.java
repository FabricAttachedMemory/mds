/*
 *
 *  Managed Data Structures
 *  Copyright Â© 2016 Hewlett Packard Enterprise Development Company LP.
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU Lesser General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 *  As an exception, the copyright holders of this Library grant you permission
 *  to (i) compile an Application with the Library, and (ii) distribute the 
 *  Application containing code generated by the Library and added to the 
 *  Application during this compilation process under terms of your choice, 
 *  provided you also meet the terms and conditions of the Application license.
 *
 */

package user;

import java.util.OptionalDouble;

import com.hpl.mds.ListField;
import com.hpl.mds.ManagedList;
import com.hpl.mds.RecordType;

public class B extends A {
  
  public static final RecordType<B> TYPE = RecordType.declare(B.class, A.TYPE);
  protected static final ListField<B, B> children = TYPE.listField("children", B.TYPE);

  public RecordType<? extends B> type() {
    return TYPE;
  }

  protected B(RecordType<? extends B> type, CharSequence name, int age, A parent, ManagedList<B> children) {
    super(type, name, age, parent);
    B.children.set(this, children);
  }
  public B(CharSequence name, int age, A parent, ManagedList<B> children) {
    this(TYPE, name, age, parent, children);
  }
  
  public OptionalDouble averageChildAge() {
    return children.get(this).stream().mapToInt(A::age).average();
  }

}
