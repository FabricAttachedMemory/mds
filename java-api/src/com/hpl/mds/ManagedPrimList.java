/*
 *
 *  Managed Data Structures
 *  Copyright Â© 2016 Hewlett Packard Enterprise Development Company LP.
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU Lesser General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 *  As an exception, the copyright holders of this Library grant you permission
 *  to (i) compile an Application with the Library, and (ii) distribute the 
 *  Application containing code generated by the Library and added to the 
 *  Application during this compilation process under terms of your choice, 
 *  provided you also meet the terms and conditions of the Application license.
 *
 */

package com.hpl.mds;

import java.util.Deque;
import java.util.List;

public interface ManagedPrimList<RepT, T extends ManagedPrimitive<RepT>> extends ManagedList<T> {
  public interface UnmanagedListView<RepT, T extends ManagedPrimitive<RepT>> extends List<RepT> {
    public ManagedPrimList<RepT, T> asManagedList();
    public UnmanagedDequeView<RepT,T> asUnmanagedDeque();
  }

  
  public UnmanagedListView<RepT, T> asUnmanagedList();
  
  public interface UnmanagedDequeView<RepT, T extends ManagedPrimitive<RepT>> extends Deque<RepT> {
    ManagedPrimList<RepT, T> asManagedList();
    UnmanagedListView<RepT, T> asUnmanagedList();
    DequeView<RepT, T> asManagedDeque();
    
  }

  UnmanagedDequeView<RepT, T> asUnmanagedDeque();

  
  public interface DequeView<RepT, T extends ManagedPrimitive<RepT>> extends ManagedList.DequeView<T> {
    ManagedPrimList<RepT,T> asManagedList();
    UnmanagedListView<RepT,T> asUnmanagedList();
    UnmanagedDequeView<RepT, T> asUnmanagedDeque();
    
    ManagedList.Type<T> type();
    
  }
  
  DequeView<RepT, T> asDeque();

  
  
}
