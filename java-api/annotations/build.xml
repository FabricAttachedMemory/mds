<!--

  Managed Data Structures
  Copyright Â© 2016 Hewlett Packard Enterprise Development Company LP.

  This program is free software: you can redistribute it and/or modify
  it under the terms of the GNU Lesser General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU Lesser General Public License for more details.

  You should have received a copy of the GNU Lesser General Public License
  along with this program.  If not, see <http://www.gnu.org/licenses/>.

  As an exception, the copyright holders of this Library grant you permission
  to (i) compile an Application with the Library, and (ii) distribute the 
  Application containing code generated by the Library and added to the 
  Application during this compilation process under terms of your choice, 
  provided you also meet the terms and conditions of the Application license.

-->

<project default="build">

	<!--
	   Build file to generate the jar file of the MDS Annotation Processor
	 -->

	<property file="build.properties" />

	<path id="classpath-base-libs">
		<pathelement path="../external/ST-4.0.8.jar" />
		<pathelement path="../jars/mds-java-api.jar" />
	</path>

	<path id="classpath-test-libs">
		<pathelement path="external/commons-io-2.4.jar" />
		<pathelement path="external/hamcrest-core-1.3.jar" />
		<pathelement path="external/javaparser-core-2.2.2.jar" />
		<pathelement path="external/junit-4.12.jar" />
		<path refid="classpath-base-libs" />
	</path>

	<fileset dir=".." id="include-libs">
		<filename name="external/ST-4.0.8.jar" />
	</fileset>

	<presetdef name="javac">
		<javac includeantruntime="false" />
	</presetdef>

	<target name="clean">
		<delete dir="${build.dir}" />
	</target>

	<target name="compile">
		<mkdir dir="${classes.dir}" />
		<echo message="debug=${debug-build}" />
		<javac srcdir="${src.dir}" destdir="${classes.dir}" debug="${debug-build}">
                        <compilerarg line="-encoding utf-8"/>
			<classpath refid="classpath-base-libs" />
		</javac>
	</target>

	<target name="annotation-processor-jar" depends="clean, compile">
		<mkdir dir="${jar.dir}" />
		<jar destfile="${jar.dir}/${project.name}.jar" basedir="${classes.dir}">
			<zipgroupfileset refid="include-libs" />
			<service type="javax.annotation.processing.Processor" provider="${processor-class}" />
			<fileset dir="." includes="${resources.dirs}" />
		</jar>
	</target>

	<target name="compile-test" depends="compile">
		<mkdir dir="${test.dir}" />
		<mkdir dir="${test.classes.dir}" />
		<javac srcdir="${test-src-dirs}" destdir="${test.classes.dir}" debug="true">
			<classpath refid="classpath-test-libs" />
			<classpath location="${classes.dir}" />
		</javac>
	</target>

	<target name="test" depends="compile-test" >
		<mkdir dir="${report.dir}" />
		<mkdir dir="${test-generated-src-dirs}" />
		<junit printsummary="yes" haltonfailure="true" dir=".">

			<classpath refid="classpath-test-libs" />
			<classpath location="${classes.dir}" />
			<classpath location="${test.classes.dir}" />

			<formatter type="xml" usefile="true" />

			<batchtest fork="yes" todir="${report.dir}">
				<fileset dir="${test-src-dirs}">
					<include name="**/*Test*.java" />
				</fileset>
			</batchtest>

		</junit>
	</target>

	<target name="build" depends="annotation-processor-jar" />

</project>
