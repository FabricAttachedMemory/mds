/*
 *
 *  Managed Data Structures
 *  Copyright Â© 2016 Hewlett Packard Enterprise Development Company LP.
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU Lesser General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 *  As an exception, the copyright holders of this Library grant you permission
 *  to (i) compile an Application with the Library, and (ii) distribute the 
 *  Application containing code generated by the Library and added to the 
 *  Application during this compilation process under terms of your choice, 
 *  provided you also meet the terms and conditions of the Application license.
 *
 */

package com.hpl.mds.annotations.processor.generator;

import java.util.logging.Logger;

import org.stringtemplate.v4.misc.STMessage;

/**
 * String template listener to log any severe errors in the templates
 * 
 * @author Abraham Alcantara
 */
public class STErrorListenerImpl implements org.stringtemplate.v4.STErrorListener {

    private static final Logger LOGGER = Logger.getLogger(STErrorListenerImpl.class.getName());

    private void error(STMessage msg) {
        LOGGER.severe("ST Error: " + msg);
    }

    @Override
    public void compileTimeError(STMessage msg) {
        error(msg);
    }

    @Override
    public void runTimeError(STMessage msg) {
        error(msg);
    }

    @Override
    public void IOError(STMessage msg) {
        error(msg);
    }

    @Override
    public void internalError(STMessage msg) {
        error(msg);
    }

}
